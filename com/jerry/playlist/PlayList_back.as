package com.jerry.playlist{		import flash.display.*;	import flash.geom.*;	import flash.text.*;	import flash.events.*;	import flash.net.*;	import flash.utils.*;	import flash.external.*;		import com.greensock.*;	import com.adobe.serialization.*;			public class PlayList extends MovieClip{				private var container_wrapper:Object;		private var container_wrapper_width:Number;				private var default_display:Boolean = false;		private var display_width:Number = 200;		private var display_height:Number = 300;		private var content_height:Number = 0;		private var item_height:Number = 70;		private var thumb_width:Number = 90;		private var thumb_height:Number = 60;		private var thumb_prop:Number = thumb_width / thumb_height;		private var font_size:Number = 12;		private var ori_x:Number;				private var thumb_x:Number = 5;		private var thumb_y:Number = 5;		private var title_x:Number;		private var title_y:Number;		private var title_width:Number;		private var title_height:Number;		private var des_height:Number;		private var item_gap:Number = 5;				private var container:MovieClip;		private var msk:Shape;		private var list_wrapper:MovieClip;		private var clip_selected:Object;		private var gap:Number = 1;		private var scroll_bar:MovieClip;		private var scroll_width:Number = 10;		private var scroll_height:Number;		private var scroll_track:Rectangle;		private var scrolled:Boolean = false;		private var handler_width:Number = 15;		private var expanded:Boolean = false;		private var expand_x:Number;				private var xml_url:String;		private var xml_loader:URLLoader;		private var xml_data:XML;				private var list_items_amount:uint;		private var list_items:Array;				public var clickCallback:Function = new Function();						public function PlayList(containerWrapper:MovieClip, displayWidth:Number, displayHeight:Number, xmlURL:String = "", defaultDisplay:Boolean = false):void{						container_wrapper = containerWrapper;			container_wrapper_width = containerWrapper.width;						display_width = displayWidth;			display_height = displayHeight;						default_display = defaultDisplay;						if(xmlURL === ""){				loadExternalResource();				}			else{				xml_url = xmlURL;				loadXML();				}							}								public function toggleExpand():void{						if(!expanded){				containerExpand();				}			else{				containerCollapse();				}						}								private function loadExternalResource():Boolean{						var playlist = ExternalInterface.call("getPlayList");						try{								playlist = JSON.parse(playlist);								}			catch(error){								trace("Error: " + error);				return false;								}									list_items_amount = playlist.length;			list_items = new Array();						for(var i = 0; i < list_items_amount; i++){								var temp_arr:Array = new Array();				temp_arr = [playlist[i].thumb, playlist[i].title, playlist[i].description, playlist[i].video];								list_items.push(temp_arr);								}							initUI();			return true;						}					private function loadXML():void{			xml_loader = new URLLoader();			xml_loader.addEventListener(Event.COMPLETE, xmlLoaded);						xml_loader.load(new URLRequest(xml_url));						}								private function xmlLoaded(e:Event):void{						xml_data = new XML(e.target.data);						list_items_amount = xml_data.item.length();			list_items = new Array();						for(var i = 0; i < list_items_amount; i++){								var temp_arr:Array = new Array();				temp_arr = [xml_data.item[i].thumb, xml_data.item[i].title, xml_data.item[i].description, xml_data.item[i].video];								list_items.push(temp_arr);								}							initUI();						}								private function initUI():void{						ori_x = container_wrapper_width;						container = new MovieClip();			container.x = ori_x;			container.y = 0;			container.alpha = 0;			container_wrapper.addChild(container);						var bg_width:Number = display_width + scroll_width + gap * 2;						var bg = createShape(bg_width, display_height, 0x666666);			bg.x = 0 - gap;			container.addChild(bg);						createMask();			createList();			//createHandler();						}								private function createMask():void{						msk = createShape(display_width, display_height, 0x000000);			container.addChild(msk);						}								private function createList():void{						if(display_width <= 200){				thumb_height = 40;				thumb_width = thumb_height * thumb_prop;				}						if(display_width <= 100){				thumb_width = display_width - item_gap * 2;				thumb_height = thumb_width * (1 / thumb_prop);				}							title_x = thumb_width + item_gap * 2;			title_y = thumb_y;			title_width = display_width - title_x - item_gap;			title_height = 20;						if(display_width <= 200){				title_x = thumb_x;				title_y = thumb_y + thumb_height + item_gap;				title_width = display_width - item_gap * 2;				}						if(display_width <= 200 && display_width > 100){				item_height = 120;				}							if(display_width <= 100){				item_height = 150;				title_height = 35;				}							des_height = item_height - title_y - title_height - item_gap;						list_wrapper = new MovieClip();			container.addChild(list_wrapper);			list_wrapper.mask = msk;						for(var i = 0; i < list_items_amount; i++){								var item:MovieClip = createListItem(list_items[i][0], list_items[i][1], list_items[i][2], list_items[i][3]);				item.x = 0;				item.y = i * (item_height + gap);				list_wrapper.addChild(item);								content_height += item_height + gap;								}							if(content_height > display_height){				createScrollBar();				}						if(scrolled){				expand_x = ori_x - display_width - gap - scroll_width;				}			else{				expand_x = ori_x - display_width;				}							if(default_display){				container.x = expand_x;				expanded = true;				}						}								private function createListItem(thumbURL:String, titleText:String, descriptionText:String, videoURL:String):MovieClip{						var clip:MovieClip = new MovieClip();						clip._thumb = thumbURL;			clip._title = titleText;			clip._description = descriptionText;			clip._video = videoURL;			clip._selected = false;						var bg:Shape = createShape(display_width, item_height, 0x000000);			clip.addChild(bg);						clip._overBg = createShape(display_width, item_height, 0x333333);			clip._overBg.alpha = 0;			clip.addChild(clip._overBg);						var thumb:MovieClip = new MovieClip();			thumb.x = thumb_x;			thumb.y = thumb_y;			clip.addChild(thumb);						var loader:Loader = new Loader();			loader.contentLoaderInfo.addEventListener(Event.COMPLETE, thumbLoaded);			loader.load(new URLRequest(thumbURL));			thumb.addChild(loader);						var title_text:TextField = new TextField();			title_text.text = titleText;			setTextWhite(title_text);			title_text.x = title_x;			title_text.y = title_y;			title_text.width = title_width;			title_text.height = title_height;			title_text.multiline = true;			title_text.wordWrap = true;						title_text.mouseEnabled = false;			clip.addChild(title_text);						var des_text:TextField = new TextField();			des_text.text = descriptionText;			setTextWhite(des_text);			des_text.x = title_text.x;			des_text.y = title_text.y + title_height + item_gap;						des_text.width = title_text.width;			des_text.height = des_height;			des_text.multiline = true;			des_text.wordWrap = true;			des_text.mouseEnabled = false;			clip.addChild(des_text);						clip.buttonMode = true;			clip.addEventListener(MouseEvent.CLICK, clipClicked);						mouseOverOut(clip, clipMouseOver, clipMouseOut);						return clip;						}								private function clipMouseOver(obj:MovieClip):void{						if(!obj._selected){				TweenLite.to(obj._overBg, 0.6, {alpha : 1});				}						}								private function clipMouseOut(obj:MovieClip):void{						if(!obj._selected){				TweenLite.to(obj._overBg, 0.6, {alpha : 0});				}						}								private function clipClicked(e:MouseEvent):void{						var target:Object = e.currentTarget;						target._overBg.alpha = 1;			target._selected = true;						if(clip_selected !== null){				clip_selected._selected = false;				clip_selected._overBg.alpha = 0;				}						clip_selected = target;			containerCollapse();						clickCallback(target);						}								private function thumbLoaded(e:Event):void{						var bmp:Bitmap = e.target.content;			var bmp_width:Number = bmp.width;			var bmp_height:Number = bmp.height;			var bmp_prop:Number = bmp_width / bmp_height;			var pos_x:Number;			var pos_y:Number;						if(bmp_prop > thumb_prop){				bmp_width = thumb_width;				bmp_height = bmp_width * (1 / bmp_prop);				pos_x = 0;				pos_y = (thumb_height - bmp_height) / 2;				}			else{				bmp_height = thumb_height;				bmp_width = bmp_height * bmp_prop;				pos_y = 0;				pos_x = (thumb_width - bmp_width) / 2;				}							bmp.width = bmp_width;			bmp.height = bmp_height;			bmp.x = pos_x;			bmp.y = pos_y;						}								private function setTextWhite(txt:TextField):void{						var tf:TextFormat = new TextFormat();			tf.color = 0xffffff;			tf.size = font_size;			txt.setTextFormat(tf);						}								private function createScrollBar():void{						scrolled = true;						//var bar_height:Number = display_height - Math.floor((display_height * display_height) / content_height);			var bar_height:Number = display_height * display_height / content_height;						var bg:Shape = createShape(scroll_width, bar_height, 0x000000);						var ori_x:Number = display_width + gap;						scroll_bar = new MovieClip();			scroll_bar.addChild(bg);			scroll_bar.x = ori_x;			scroll_bar.y = 0;			scroll_bar.buttonMode = true;						container.addChild(scroll_bar);						scroll_height = display_height - bar_height;			scroll_track = new Rectangle(ori_x, 0, 0, scroll_height);						scroll_bar.addEventListener(MouseEvent.MOUSE_DOWN, onScrollBar);			scroll_bar.stage.addEventListener(MouseEvent.MOUSE_UP, offScrollBar);						container.addEventListener(MouseEvent.MOUSE_WHEEL, mouseScrolling);						}								private function mouseScrolling(e:MouseEvent):void{						scroll_bar.y += 0 - e.delta * 3;						if(scroll_bar.y < 0){				scroll_bar.y = 0;				}							if(scroll_bar.y > scroll_height){				scroll_bar.y = scroll_height;				}							var pos_y:Number = 0 - (scroll_bar.y / scroll_height) * (content_height - display_height);			TweenLite.to(list_wrapper, 0.6, {y : pos_y});						}								private function onScrollBar(e:MouseEvent):void{						scroll_bar.startDrag(false, scroll_track);			scroll_bar.addEventListener(Event.ENTER_FRAME, scrolling);						}							private function offScrollBar(e:MouseEvent):void{						scroll_bar.stopDrag();			scroll_bar.removeEventListener(Event.ENTER_FRAME, scrolling);						}								private function scrolling(e:Event):void{						var pos_y:Number = 0 - (scroll_bar.y / scroll_height) * (content_height - display_height);			TweenLite.to(list_wrapper, 0.6, {y : pos_y});						}								private function createHandler():void{						var handler:MovieClip = new MovieClip();						var bg:Shape = createShape(handler_width, display_height, 0x000000);			handler.addChild(bg);						var graphic:MovieClip = new MovieClip();						for(var i = 0; i < 3; i++){								var item:Shape = createShape(2, 20, 0x333333);				item.x = i * 3;				item.y = 0;				graphic.addChild(item);								}							graphic.x = (handler_width - 9) / 2;			graphic.y = (display_height - 20) / 2;			handler.addChild(graphic);						handler.x = 0 - handler_width - gap;			handler.y = 0;			container.addChild(handler);						handler.buttonMode = true;			handler.addEventListener(MouseEvent.CLICK, handlerClicked);						}								private function handlerClicked(e:MouseEvent):void{						if(!expanded){				containerExpand();				}			else{				containerCollapse();				}						}								private function containerExpand():void{						TweenLite.to(container, 0.3, {x : expand_x, alpha:1});			expanded = true;						}							private function containerCollapse():void{						TweenLite.to(container, 0.3, {x : ori_x, alpha:0});			expanded = false;						}								private function createShape(w:Number, h:Number, color:uint):Shape{						var shape:Shape = new Shape();			shape.graphics.beginFill(color);			shape.graphics.drawRect(0, 0, w, h);			shape.graphics.endFill();			shape.alpha = 0.7;						return shape;						}								private function mouseOverOut(obj:MovieClip, overCallback:Function, outCallback:Function):void{						var mouse_over:Boolean = false;			var timer:Timer = new Timer(100, 1);						timer.addEventListener(TimerEvent.TIMER, checkOver);						obj.addEventListener(MouseEvent.MOUSE_OVER, objMouseOver);			obj.addEventListener(MouseEvent.MOUSE_OUT, objMouseOut);						function objMouseOver(e:MouseEvent):void{								mouse_over = true;				overCallback(obj);								}							function objMouseOut(e:MouseEvent):void{								mouse_over = false;				timer.start();								}							function checkOver(e:TimerEvent):void{								if(!mouse_over){					outCallback(obj);					}								}						}						}		}