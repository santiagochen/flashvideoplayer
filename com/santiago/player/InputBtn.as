/** InputBtn Component* Creator: Santiago.Chen* Email: santiago1209@foxmail.comvar inputbtn:InputBtn = new InputBtn(30,30,10);this.addChild(inputbtn);inputbtn.x =10; inputbtn.y=10;inputbtn.waitmes = "提交中……";inputbtn.successmes = "提交成功";inputbtn.isAsync = true;inputbtn.ClickSubmit = function(data:*){	trace(data);	trace("good on call: "+data);	timer.start();	}var timer:Timer = new Timer(2000,1);timer.addEventListener(TimerEvent.TIMER,function(){					   inputbtn.SubmitSuccess();					   })*/package com.santiago.player  {	import flash.display.Sprite;	import flash.text.TextField;	import flash.events.MouseEvent;	import com.greensock.TweenMax;	import flash.text.TextFormat;	import flash.events.Event;	import flash.events.FocusEvent;	import flash.events.TextEvent;	import flash.utils.Timer;	import flash.events.TimerEvent;		public class InputBtn extends Sprite {		private var base:Sprite = new Sprite;		//MC for stage 1:unactive		private var btn1:Sprite = new Sprite;				//MC for stage 2:active		private var btn2container:Sprite = new Sprite;		private var btn2base:Sprite = new Sprite;		private var btn2input:TextField = new TextField();		private var btn2submit:Sprite = new Sprite;				private var isactive:Boolean = false;		private var _width:Number;		private var _height:Number;		private var _scaletimes:Number;				private var _tf:TextFormat;				private var _datasubmitted:String;		private var _waitmes:String = "loading...";		private var _successmes:String = "success";		private var _placeholder:String = "输入您的名字";				private var _borderalpha:Number;		private var _fillalpha:Number;		private var _bordercolor:uint;		private var _fillcolor:uint;				public var ClickSubmit:Function;		public var SubmitSuccess:Function;		public var isAsync:Boolean = false;				public function InputBtn(width:Number,height:Number,scaletimes:Number= 8, borderalpha:Number=.8, fillalpha:Number=.8, bordercolor:uint=0xffffff, fillcolor:uint=0xffffff) {			_width = width;			_height = height;			_scaletimes = scaletimes;			_borderalpha = borderalpha;			_fillalpha = fillalpha;			_bordercolor = bordercolor;			_fillcolor = fillcolor;						initUI();						ClickSubmit = function(data:String):void;			SubmitSuccess = function(){				onSubmitSuccess();				};		}		private function initUI(){			//base			base.graphics.beginFill(_fillcolor,_fillalpha);			base.graphics.lineStyle(.5,_bordercolor,_borderalpha);			base.graphics.moveTo(0,0);			base.graphics.lineTo(_width,0);			base.graphics.lineTo(_width,_height);			base.graphics.lineTo(0,_height);			base.graphics.lineTo(0,0);			base.graphics.endFill();			this.addChild(base);						//btn1			btn1.graphics.beginFill(_fillcolor,_fillalpha+.1);			btn1.graphics.moveTo(_width*.4,_height*.2);			btn1.graphics.lineTo(_width*.6,_height*.2);			btn1.graphics.lineTo(_width*.6,_height*.4);			btn1.graphics.lineTo(_width*.8,_height*.4);			btn1.graphics.lineTo(_width*.8,_height*.6);			btn1.graphics.lineTo(_width*.6,_height*.6);			btn1.graphics.lineTo(_width*.6,_height*.8);			btn1.graphics.lineTo(_width*.4,_height*.8);			btn1.graphics.lineTo(_width*.4,_height*.6);			btn1.graphics.lineTo(_width*.2,_height*.6);			btn1.graphics.lineTo(_width*.2,_height*.4);			btn1.graphics.lineTo(_width*.4,_height*.4);			btn1.graphics.lineTo(_width*.4,_height*.2);			btn1.graphics.endFill();			btn1.graphics.beginFill(0x000000,0);			btn1.graphics.lineStyle(.5,_bordercolor,.4);			btn1.graphics.moveTo(0,0);			btn1.graphics.lineTo(_width,0);			btn1.graphics.lineTo(_width,_height);			btn1.graphics.lineTo(0,_height);			btn1.graphics.lineTo(0,0);			btn1.graphics.endFill();			this.addChild(btn1);			btn1.buttonMode = true;						//btn2base			this.addChild(btn2container);			btn2container.mask = base;			btn2base.graphics.beginFill(0x000000,.1);			btn2base.graphics.drawRect(_width,0,_width*_scaletimes,_height);			btn2base.graphics.endFill();			btn2container.addChild(btn2base);						//btn2input			btn2container.addChild(btn2input);			btn2input.type = "input"; 			_tf = new TextFormat("Arial",12*_height/22,0xffffff);			btn2input.defaultTextFormat = _tf;			btn2input.width = btn2base.width-_height*2;			btn2input.height = btn2base.height*2;			btn2input.x = _width+5;			btn2input.y = _height*.1;			btn2input.text = _placeholder;						//btn2submit				btn2submit.graphics.beginFill(0x000000,.4);			btn2submit.graphics.lineStyle(.5,0xffffff,0);			btn2submit.graphics.moveTo(0,0);			btn2submit.graphics.lineTo(_width,0);			btn2submit.graphics.lineTo(_width,_height);			btn2submit.graphics.lineTo(0,_height);			btn2submit.graphics.lineTo(0,0);			btn2submit.graphics.endFill();						btn2submit.graphics.beginFill(0xffffff,1);			btn2submit.graphics.lineStyle(.5,0xffffff,0);			btn2submit.graphics.moveTo(_width*.12,_height*.48);			btn2submit.graphics.lineTo(_width*.42,_height*.81);			btn2submit.graphics.lineTo(_width*.87,_height*.3);			btn2submit.graphics.lineTo(_width*.77,_height*.2);			btn2submit.graphics.lineTo(_width*.42,_height*.6);			btn2submit.graphics.lineTo(_width*.23,_height*.38);			btn2submit.graphics.lineTo(_width*.12,_height*.48);			btn2submit.graphics.endFill();			btn2container.addChild(btn2submit);			btn2submit.buttonMode = true;			btn2submit.x = btn2base.width-_height;									listenerEvents();			}				private function listenerEvents():void{			this.addEventListener(Event.ENTER_FRAME,function(event:Event):void{enablesubmit()});						btn1.addEventListener(MouseEvent.CLICK, activeInputBtn);			btn2input.addEventListener(FocusEvent.FOCUS_IN, onFocusInput);			btn2input.addEventListener(FocusEvent.FOCUS_OUT, onBlurInput);			btn2input.addEventListener(TextEvent.TEXT_INPUT,onTextInput);			}		private function onClickSubmit(event:MouseEvent):void{			//trace("onClickSubmit");			_datasubmitted = btn2input.text;			ClickSubmit(_datasubmitted);			if(!isAsync){				animateSucMes();				}			else{				btn2input.text = _waitmes;				//submit success continue when it was really triggered;				}			}		private function onTextInput(event:TextEvent):void{			//for future extending utilization.			}		private function onFocusInput(event:FocusEvent):void{			if(event.target.text == _placeholder){				event.target.text = "";				}			}		private function onBlurInput(event:FocusEvent):void{			if(event.target.text == ""){				event.target.text = _placeholder;				}			}		private function activeInputBtn(event:MouseEvent):void{			if(!isactive){				TweenMax.to(base,.3,{width:_width*_scaletimes});				btn1.alpha = .6;				isactive = true;				}			else{				TweenMax.to(base,.3,{width:_width,onComplete:function(){restore();}});				btn1.alpha = 1;				isactive = false;				}						}		private function enablesubmit(){			if(btn2input.text!==""&&btn2input.text!==_placeholder){				btn2submit.alpha = 1;				btn2submit.addEventListener(MouseEvent.CLICK,onClickSubmit);				}			else{				btn2submit.alpha = .2;				btn2submit.removeEventListener(MouseEvent.CLICK,onClickSubmit);				}			}				private function restore():void{			btn2input.text = _placeholder;			}				private function onSubmitSuccess(){			animateSucMes();			}				private function animateSucMes(){			btn2input.text = _successmes;			var timer:Timer = new Timer(800,1);			timer.addEventListener(TimerEvent.TIMER, function(event:TimerEvent):void{btn2input.text = _placeholder;timer.stop();})			timer.start();			}				public function set waitmes(txt:String):void{			_waitmes = txt;						}		public function set successmes(txt:String):void{			_successmes = txt;			}		public function set placeholder(txt:String):void{			_placeholder = txt;			btn2input.text = _placeholder;			}				}	}