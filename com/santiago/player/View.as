package com.santiago.player {	import flash.display.MovieClip;	import flash.display.Sprite;	import flash.events.MouseEvent;	import flash.events.Event;	import flash.text.TextField;		public class View extends MovieClip{				private var bg:Sprite = new Sprite;		private var controls:Sprite = new Sprite;		private var togglebtn:Sprite = new Sprite;		private var toggleplaybtn:Sprite = new Sprite;		private var togglepausebtn:Sprite = new Sprite;		private var stopbtn:Sprite = new Sprite;		private var mutebtn:Sprite = new Sprite;		private var fscreenbtn:Sprite = new Sprite;		private var playlistbtn:Sprite = new Sprite;				private var adreminetime:TextField = new TextField();				static const controlscolor:int = 0x416AB3;		static const btnbordercolor:int = 0xffffff;		//static const btncolor:int = 0x102A4C;		static const btncolor:int = 0xffffff;				static const btnalpha:Number = .8;		static const otheralpha:Number = 0;				private var ismute:Boolean = false;		private var isplaying:Boolean = false; 		private var isplaylist:Boolean = false;				public function View(width:Number,height:Number) {						//bg			bg.graphics.beginFill(0x000000,1);			bg.graphics.drawRect(0,0,width,height);			bg.graphics.endFill();			this.addChild(bg);			bg.x = bg.y = 0;						//controls			controls.graphics.beginFill(controlscolor,1);			controls.graphics.drawRect(0,0,width, height*.06);			controls.graphics.endFill();			this.addChild(controls);			controls.x = 0; 			controls.y = height*.94;						//togglebtn			togglebtn.graphics.beginFill(btncolor,otheralpha);			togglebtn.graphics.drawRect(0,0,width*.05, height*.05);			togglebtn.graphics.endFill();			togglebtn.buttonMode = true;			controls.addChild(togglebtn);						//toggleplaybtn			toggleplaybtn.graphics.beginFill(btncolor,btnalpha);			toggleplaybtn.graphics.lineStyle(1,btnbordercolor,0);			toggleplaybtn.graphics.moveTo(0,0);			toggleplaybtn.graphics.lineTo(0,height*.035);			toggleplaybtn.graphics.lineTo(width*.02, height*.018);			toggleplaybtn.graphics.lineTo(0,0);			toggleplaybtn.graphics.endFill();			togglebtn.addChild(toggleplaybtn);			toggleplaybtn.visible = true;			toggleplaybtn.x = width*.02;			toggleplaybtn.y = height*.014;						//togglepausebtn			togglepausebtn.graphics.beginFill(btncolor,btnalpha);			togglepausebtn.graphics.lineStyle(1,btnbordercolor,0);						togglepausebtn.graphics.moveTo(0,0);			togglepausebtn.graphics.lineTo(0,height*.034);			togglepausebtn.graphics.lineTo(width*.009,height*.034);			togglepausebtn.graphics.lineTo(width*.009,0);			togglepausebtn.graphics.lineTo(0,0);						togglepausebtn.graphics.moveTo(width*.012,0);			togglepausebtn.graphics.lineTo(width*.012,height*.034);			togglepausebtn.graphics.lineTo(width*.021,height*.034);			togglepausebtn.graphics.lineTo(width*.021,0);			togglepausebtn.graphics.lineTo(width*.012,0);						togglepausebtn.graphics.endFill();			togglebtn.addChild(togglepausebtn);			togglepausebtn.visible = false;			togglepausebtn.x = width*.02;			togglepausebtn.y = height*.014;						//stopbtn			stopbtn.graphics.beginFill(btncolor,btnalpha);			stopbtn.graphics.drawRect(0,0,height*.034, height*.034);			stopbtn.graphics.endFill();			controls.addChild(stopbtn);			stopbtn.buttonMode = true;			stopbtn.x = width*.06;			stopbtn.y = height*.014;						//playlistbtn			playlistbtn.graphics.beginFill(btncolor,btnalpha);			playlistbtn.graphics.drawRect(0,0,height*.016*0.6,height*.016*0.6);			playlistbtn.graphics.drawRect(height*.022*0.6,0,height*.016*0.6,height*.016*0.6);			playlistbtn.graphics.drawRect(height*.044*0.6,0,height*.016*0.6,height*.016*0.6);			playlistbtn.graphics.drawRect(0,height*.022*0.6,height*.016*0.6,height*.016*0.6);			playlistbtn.graphics.drawRect(height*.022*0.6,height*.022*0.6,height*.016*0.6,height*.016*0.6);			playlistbtn.graphics.drawRect(height*.044*0.6,height*.022*0.6,height*.016*0.6,height*.016*0.6);			playlistbtn.graphics.drawRect(0,height*.044*0.6,height*.016*0.6,height*.016*0.6);			playlistbtn.graphics.drawRect(height*.022*0.6,height*.044*0.6,height*.016*0.6,height*.016*0.6);			playlistbtn.graphics.drawRect(height*.044*0.6,height*.044*0.6,height*.016*0.6,height*.016*0.6);			playlistbtn.graphics.beginFill(btncolor,0);			playlistbtn.graphics.drawRect(0,0,height*.06*0.6,height*.06*0.6);			playlistbtn.graphics.endFill();			controls.addChild(playlistbtn);			playlistbtn.x = width*.105;			playlistbtn.y = height*.014;			playlistbtn.buttonMode = true;						//mutebtn			mutebtn.graphics.beginFill(btncolor,btnalpha);			mutebtn.graphics.moveTo(width*.04*.6,height*.04*.6);			mutebtn.graphics.lineTo(width*.04*.6,height*.06*.6);			mutebtn.graphics.lineTo(width*.08*.6,height*.08*.6);			mutebtn.graphics.lineTo(width*.08*.6,height*.02*.6);			mutebtn.graphics.lineTo(width*.04*.6,height*.04*.6);			mutebtn.graphics.endFill();			controls.addChild(mutebtn);			mutebtn.buttonMode = true;			mutebtn.y = height*.001;			mutebtn.x = width*.87;						//fscreenbtn			fscreenbtn.graphics.beginFill(btncolor,btnalpha);			//lefttop			fscreenbtn.graphics.moveTo(0,height*.01*.6);			fscreenbtn.graphics.lineTo(width*.03*.6,height*.01*.6);			fscreenbtn.graphics.lineTo(width*.03*.6,height*.015*.6);			fscreenbtn.graphics.lineTo(width*.005*.6,height*.015*.6);			fscreenbtn.graphics.lineTo(width*.005*.6,height*.04*.6);			fscreenbtn.graphics.lineTo(0,height*.04*.6);			fscreenbtn.graphics.lineTo(0,height*.01*.6);			//righttop			fscreenbtn.graphics.moveTo(width*.035*.6,height*.01*.6);			fscreenbtn.graphics.lineTo(width*.065*.6,height*.01*.6);			fscreenbtn.graphics.lineTo(width*.065*.6,height*.04*.6);			fscreenbtn.graphics.lineTo(width*.06*.6,height*.04*.6);			fscreenbtn.graphics.lineTo(width*.06*.6,height*.015*.6);			fscreenbtn.graphics.lineTo(width*.035*.6,height*.015*.6);			fscreenbtn.graphics.lineTo(width*.035*.6,height*.01*.6);			//rightbottom			fscreenbtn.graphics.moveTo(width*.065*.6,height*.045*.6);			fscreenbtn.graphics.lineTo(width*.065*.6,height*.075*.6);			fscreenbtn.graphics.lineTo(width*.035*.6,height*.075*.6);			fscreenbtn.graphics.lineTo(width*.035*.6,height*.07*.6);			fscreenbtn.graphics.lineTo(width*.06*.6,height*.07*.6);			fscreenbtn.graphics.lineTo(width*.06*.6,height*.045*.6);			fscreenbtn.graphics.moveTo(width*.065*.6,height*.045*.6);			//leftbottom			fscreenbtn.graphics.moveTo(0,height*.045*.6);			fscreenbtn.graphics.lineTo(width*.005*.6,height*.045*.6);			fscreenbtn.graphics.lineTo(width*.005*.6,height*.07*.6);			fscreenbtn.graphics.lineTo(width*.03*.6,height*.07*.6);			fscreenbtn.graphics.lineTo(width*.03*.6,height*.075*.6);			fscreenbtn.graphics.lineTo(0,height*.075*.6);			fscreenbtn.graphics.lineTo(0,0);			//centerbg			fscreenbtn.graphics.beginFill(0xffffff,otheralpha);			fscreenbtn.graphics.drawRect(0,height*.01*.6,width*.065*.6,height*.07*.6);			fscreenbtn.graphics.endFill();			fscreenbtn.buttonMode = true;			controls.addChild(fscreenbtn);			fscreenbtn.y = height*.006;			fscreenbtn.x = width*.94;						//alpha control			togglebtn.alpha = .5;			stopbtn.alpha = .5;			mutebtn.alpha = .5;			fscreenbtn.alpha = .5;						playlistbtn.addEventListener(MouseEvent.CLICK, onClickPL);						this.addEventListener(ActionEvent.CONTENTREADYPLAY,onContentReadyPlay);			this.addEventListener(ActionEvent.CONFIGCONTROL,onConfigControl);			this.addEventListener(ActionEvent.RESPONSEPLAYLIST, onResponsePlaylist);		}				private function onConfigControl(event:ActionEvent):void{						}				private function onContentReadyPlay(event:ActionEvent){			togglepausebtn.visible = true;			toggleplaybtn.visible = false;			isplaying = true;			if(event.data=="ad"){				enablePartControl();				disablePartControl();				}			else{				enableControl();				}			}				private function disableControl(){			togglebtn.alpha = .5;			stopbtn.alpha = .5;			mutebtn.alpha = .5;			fscreenbtn.alpha = .5;			mutebtn.removeEventListener(MouseEvent.CLICK, onClickMute);			stopbtn.removeEventListener(MouseEvent.CLICK, onClickStop);			togglebtn.removeEventListener(MouseEvent.CLICK,onClickToggle);			fscreenbtn.removeEventListener(MouseEvent.CLICK,onClickFS);			}		private function disablePartControl(){			togglebtn.alpha = .5;			stopbtn.alpha = .5;			stopbtn.removeEventListener(MouseEvent.CLICK, onClickStop);			togglebtn.removeEventListener(MouseEvent.CLICK,onClickToggle);			}		private function enableControl(){			mutebtn.addEventListener(MouseEvent.CLICK, onClickMute);			stopbtn.addEventListener(MouseEvent.CLICK, onClickStop);			togglebtn.addEventListener(MouseEvent.CLICK,onClickToggle);			fscreenbtn.addEventListener(MouseEvent.CLICK,onClickFS);			togglebtn.alpha = 1;			stopbtn.alpha = 1;			mutebtn.alpha = 1;			fscreenbtn.alpha = 1;			}		private function enablePartControl(){			mutebtn.addEventListener(MouseEvent.CLICK, onClickMute);			fscreenbtn.addEventListener(MouseEvent.CLICK,onClickFS);			mutebtn.alpha = 1;			fscreenbtn.alpha = 1;			}				private function onClickMute(event:MouseEvent):void{			if(!ismute){				mutebtn.alpha = .5;				ismute = true;				}			else{				mutebtn.alpha = 1;				ismute = false;				}			this.dispatchEvent(new ActionEvent(ActionEvent.MUTECLICK,ismute));						}				private function onClickStop(event:MouseEvent):void{			this.dispatchEvent(new ActionEvent(ActionEvent.STOPCLICK));				}					private function onClickToggle(event:MouseEvent):void{			if(isplaying){				togglepausebtn.visible = false;				toggleplaybtn.visible = true;				isplaying = false;				}			else{				togglepausebtn.visible = true;				toggleplaybtn.visible = false;				isplaying = true;				}			this.dispatchEvent(new ActionEvent(ActionEvent.TOGGLECLICK,isplaying));				}		private function onClickFS(event:MouseEvent):void{			this.dispatchEvent(new ActionEvent(ActionEvent.FSCLICK))			}		private function onClickPL(event:MouseEvent):void{			if(isplaylist){				playlistbtn.alpha = 1;				isplaylist = false;				}			else{				playlistbtn.alpha = .5;				isplaylist = true;				}			this.dispatchEvent(new ActionEvent(ActionEvent.PLAYLISTCLICK,isplaylist));			}				private function onResponsePlaylist(event:ActionEvent):void{			if(isplaylist){				playlistbtn.alpha = 1;				isplaylist = false;				}			else{				playlistbtn.alpha = .5;				isplaylist = true;				}			}				private function adRemineTimeHandler():void{}			}	}